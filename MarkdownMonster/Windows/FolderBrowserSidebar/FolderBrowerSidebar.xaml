<UserControl x:Class="MarkdownMonster.Windows.FolderBrowerSidebar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:local="clr-namespace:MarkdownMonster.Windows"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" MinWidth="215"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
		<local:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />

		<!--DataType="{x:Type local:PathItem}"-->
		<HierarchicalDataTemplate x:Key="FolderTemplate"  ItemsSource="{Binding Path=Files}" >
			<StackPanel MouseDown="TreeViewItem_MouseDoubleClick">
                <StackPanel Orientation="Horizontal">
                    <Image Height="16" Width="Auto" Margin="5,0,5,0" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                        <Setter Property="Source" Value="{Binding OpenIcon}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                        <Setter Property="Source" Value="{Binding Icon}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Name="TextFileOrFolderName" Text="{Binding DisplayName, Mode=OneWay}" Padding="5,3,15,3"
				           Visibility="{Binding IsNotEditing, Converter={StaticResource BooleanToVisibilityConverter}}"
						   MouseEnter="TextFileOrFolderName_MouseEnter" 
                           MouseLeave="TextFileOrFolderName_MouseLeave" 				
                           MouseUp="TextFileOrFolderName_MouseUpToEdit" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsFolder}" Value="True">
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBox Name="TextEditFileItem"
                            Text="{Binding EditName, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Padding="6,0,10,0" Margin="0"                            
                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}" 
                             LostFocus="TextEditFileItem_LostFocus">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                        <Setter Property="Background" Value="#444" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>

            </StackPanel>
		</HierarchicalDataTemplate>
		<ContextMenu x:Key="FileContextMenu">
			<MenuItem Name="MenuAddFile" Header="_New File" Click="MenuAddFile_Click" InputGestureText="N"/>
			<MenuItem Name="MenuAddFolder" Header="New Folder" Click="MenuAddDirectory_Click" />
			<Separator/>
			<MenuItem Name="MenuDeleteFile" Header="Delete" InputGestureText="Del" Click="MenuDeleteFile_Click" />
			<MenuItem Name="MenuRenameFile" Header="Rename"  InputGestureText="F2" Click="MenuRenameFile_Click" />
			<Separator/>
			<MenuItem Name="MenuOpenImage" Header="Show Image" 
					  Visibility="{Binding SelectedItem.IsImage, Converter={StaticResource BooleanToVisibilityConverter}}" 
					  Click="MenuShowImage_Click" />
			<MenuItem Name="MenuEditImage" Header="Edit Image" 
			          Visibility="{Binding SelectedItem.IsImage, Converter={StaticResource BooleanToVisibilityConverter}}" 
					  Click="MenuEditImage_Click" />

			<MenuItem Name="MenuOpenInEditor" Header="Open in Editor" Click="MenuOpenInEditor_Click" 
			          Visibility="{Binding SelectedItem.IsNotImage, Converter={StaticResource BooleanToVisibilityConverter}}" 
			          IsEnabled="{Binding SelectedItem.IsFolder,Converter={StaticResource InvertedBooleanConverter}}"						  
			/>
            <MenuItem Name="MenuOpenWithShell"
			          Visibility="{Binding SelectedItem.IsNotImage, Converter={StaticResource BooleanToVisibilityConverter}}" 
					  Header="Open with Shell" 
					  Click="MenuOpenWithShell_Click" />
            <MenuItem Name="MenuCommitToGit" Header="Commit to _Git and Push" Click="MenuCommitGit_Click" InputGestureText="G"/>
		    <MenuItem Name="MenuCopyPathToClipBoard" Header="Copy to Path to Clipboard" Click="MenuCopyPathToClipboard_Click" />
            <Separator/>

		    <MenuItem Name="MenuOpenTerminal" Header="Open Folder in Terminal" Click="MenuOpenTerminal_Click" />
            <MenuItem Name="MenuOpenInExplorer" Header="Open Folder in Explorer" Click="MenuOpenInExplorer_Click" />
		    
		    <MenuItem Name="MenuOpenFolderBrowserHere"
		              Visibility="{Binding SelectedItem.IsFolder, Converter={StaticResource BooleanToVisibilityConverter}}" 
		              Header="Open Folder Browser here" 
		              Click="MenuOpenFolderBrowserHere_Click" />
	
        </ContextMenu>
        <ContextMenu x:Key="RecentFoldersContextMenu" >
        </ContextMenu>
	</UserControl.Resources>
	
	<Grid Name="GridFolderBrowser">

		
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		    <RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Name="ImagePreviewColumn"  Height="Auto"/>
		</Grid.RowDefinitions>

		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
			    <ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			
			<TextBlock Height="Auto" 
					   Text="FILES"
					   FontWeight="Medium" FontSize="11"  Padding="7,5,2,5" />

            <Button Content="…" Grid.Column="1" Background="Transparent"
			        Foreground="{DynamicResource BlueItem}" Padding="5,0,5,0"
			        Name="ButtonSelecttFolder" BorderThickness="0"  FontSize="12"
			        ToolTip="Browse for Folder" 
			        Click="ButtonSelectFolder_Click" />
            <Button fa:Awesome.Content="History" Grid.Column="2" Background="Transparent"
                    Foreground="{DynamicResource BlueItem}" Padding="6,0,6,0" 
                    Name="ButtonRecentFolders" BorderThickness="0"  FontSize="12"
                    ToolTip="Recent Folders" 
                    Click="ButtonRecentFolders_Click" />
			<Button  fa:Awesome.Content="LocationArrow" Background="Transparent" 
			         Foreground="{DynamicResource BlueItem}" Padding="6,0,6,0" Grid.Column="3"  
					 Name="ButtonUseCurrentFolder" BorderThickness="0" FontSize="12"
			         ToolTip="Set Folder to Active Document's Folder" 
			         Click="ButtonUseCurrentFolder_Click" />
			<Button  fa:Awesome.Content="Refresh" Background="Transparent" 
			         Foreground="{DynamicResource BlueItem}" Padding="6,0,6,0" Grid.Column="4"  
			         Name="ButtonRefreshFolder" BorderThickness="0"  FontSize="12"
			         ToolTip="Refresh Folder" 
			         Click="ButtonRefreshFolder_Click" />
			<Button  fa:Awesome.Content="ChevronCircleLeft" Background="Transparent" 
			         Foreground="{DynamicResource BlueItem}" Padding="7,0,7,0" Grid.Column="5"  
			         Name="ButtonClosePanel" BorderThickness="0" FontSize="12"
			         ToolTip="Close Folder Browser Panel" 
			         Click="ButtonClosePanel_Click" />

		</Grid>



        <ComboBox Grid.Row="1" Name="ComboFolderPath" Text="{Binding FolderPath,UpdateSourceTrigger=LostFocus}"
	             Opacity="0.60" FontWeight="Medium"
	             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
                 
	             BorderThickness="0"  
                 PreviewKeyUp="ComboFolderPath_PreviewKeyDown"                 
                 IsEditable="True" 	    IsTextSearchEnabled="True"
                
                 MaxDropDownHeight="275"
                 controls:TextBoxHelper.Watermark="Folder Browser Path"
	             />

        <TreeView Grid.Row="3" Name="TreeFolderBrowser"
				  ItemTemplate="{StaticResource FolderTemplate}" 
				  KeyDown="TreeView_Keyup" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
		          PreviewMouseLeftButtonDown="TreeFolderBrowser_PreviewMouseLeftButtonDown"
		          PreviewMouseMove="TreeFolderBrowser_MouseMove"
				  ItemsSource="{Binding ActivePathItem.Files}"  
                  BorderThickness="0"
				  ContextMenu="{StaticResource FileContextMenu}">
			<TreeView.Resources>
                <Style  TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}" />
                </Style>

                <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="Steelblue" />
			    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
			                     Color="#eee" />
			    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
			                     Color="Gray" />
			    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
			                     Color="#eee" />-->
            </TreeView.Resources>
		</TreeView>

		<Popup Name="PopupImagePreview" Grid.Row="3" Placement="Mouse" Margin="10" >
			<Border BorderThickness="1" BorderBrush="#676767" >
				<Image Name="ImagePreview" Height="Auto" Width="Auto" 
				   MinHeight="50"
				   MinWidth="50"	
				   MaxHeight="470"
				   MaxWidth="570" />
			</Border>
		</Popup>

	</Grid>
</UserControl>
